{"title":"图解HTTP","date":"2019-12-28T02:57:54.155Z","date_formatted":{"ll":"Dec 28, 2019","L":"12/28/2019","MM-DD":"12-28"},"link":"2019/12/28/图解HTTP","updated":"2019-12-28T02:52:43.190Z","content":"<h1 id=\"图解HTTP\">图解HTTP<a href=\"2019/12/28/图解HTTP#图解HTTP\"></a></h1><h4 id=\"HTTP\">HTTP<a href=\"2019/12/28/图解HTTP#HTTP\"></a></h4><p>​       HTTP：HyperText Transfer Protocol 通常被翻译为<strong><em>超文本传输协议</em></strong>，严谨的翻译应为<strong><em>超文本转移协议</em></strong>。目前主流的http版本为http1.1。</p>\n<p>  网络设备要互相通信都需要一个相同的规则，我们把这个通信称为协议。互联网相关的协议集合总称为TCP/IP。</p>\n<h4 id=\"分层\">分层<a href=\"2019/12/28/图解HTTP#分层\"></a></h4><p>TCP/IP最为重要的是分层。</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th align=\"center\">客户端</th>\n<th align=\"center\">服务器</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">应用层  http客户端</td>\n<td align=\"center\">应用层  http客户端</td>\n</tr>\n<tr>\n<td align=\"center\">传输层    TCP</td>\n<td align=\"center\">传输层    TCP</td>\n</tr>\n<tr>\n<td align=\"center\">网络层   IP</td>\n<td align=\"center\">网络层   IP</td>\n</tr>\n<tr>\n<td align=\"center\">链路层 网络</td>\n<td align=\"center\">链路层 网络</td>\n</tr>\n</tbody></table></div></div>\n<p>应用层：向用户提供应用服务时通信活动。http协议也在该层。</p>\n<p>传输层：提供网络连接的两台计算机数据传输。</p>\n<p>网络层：用来处理网络上流动的数据包。</p>\n<p>链路层：用来处理连接网络的硬件部分。</p>\n<p>分层的好处：</p>\n<ol>\n<li>设计相对简单。</li>\n<li>不同层出现问题时只用修改相对应的层就行。                                                                                                          </li>\n</ol>\n<p>TCP协议采用三次握手策略，确保数据能准确发送。在握手过程中通过TCP标志(flag)、SYN、ACK来进行确认。</p>\n<h5 id=\"URI\">URI<a href=\"2019/12/28/图解HTTP#URI\"></a></h5><p>URI：统一资源标识符</p>\n<p>Uniform:规定统一个数可方便处理多种不同类型的资源。</p>\n<p>Resource:可标识的任何东西。</p>\n<p>Identifier：可以标识的对象。</p>\n<p>URI就是由某个协议方案标识的资源的定位标识符。采用http协议时，协议方案就是http。</p>\n<h6 id=\"绝对URI格式\">绝对URI格式<a href=\"2019/12/28/图解HTTP#绝对URI格式\"></a></h6><div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>http://</th>\n<th>user:pass</th>\n<th align=\"center\">@<a href=\"http://www.example.jp\" target=\"_blank\" rel=\"noopener\">www.example.jp</a></th>\n<th align=\"center\">:80</th>\n<th>/dir/index.htm</th>\n<th align=\"center\">?uid=2</th>\n<th align=\"center\">#ch1</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>协议方案名</td>\n<td>登录信息</td>\n<td align=\"center\">服务器地址</td>\n<td align=\"center\">服务器端口</td>\n<td>带层次的文件路径</td>\n<td align=\"center\">查询字符串</td>\n<td align=\"center\">片段标识符</td>\n</tr>\n</tbody></table></div></div>\n<h4 id=\"http方法http1-1版本\">http方法http1.1版本<a href=\"2019/12/28/图解HTTP#http方法http1-1版本\"></a></h4><p>GET：获取资源。</p>\n<p>POST：传输实体内容。</p>\n<p>PUT：传输文件。（不带验证机制，一般不使用）</p>\n<p>HEAD：获得报文首部。</p>\n<p>DELETE：删除文件。（不带验证机制，一般不使用）</p>\n<p>OPTIONS：询问支持方法。</p>\n<p>TRACE：追踪路径。</p>\n<p>CONNECT：要求用隧道协议连接代理。</p>\n<h5 id=\"http持久连接\">http持久连接<a href=\"2019/12/28/图解HTTP#http持久连接\"></a></h5><p>持久连接的特点是：任意一端没有明确提出断开连接，则保持TCP连接状态。持久连接使得多数请求以管线化，管线化即不用等待响应就发送下个请求。</p>\n<h5 id=\"Cookie技术\">Cookie技术<a href=\"2019/12/28/图解HTTP#Cookie技术\"></a></h5><p>http是无状态协议，不对之前的请求进行管理。因此采用Cookie技术解决这个状态产生的问题。</p>\n<p>Cookie会根据从服务器端发送的响应报文内的一个叫做Set-Cookie的首部字段信息，通知客户端保存Cookie，当下次客户端在往该服务器发送请求时，客户端会自动在请求报文中加入Cookie值后发送出去。服务器发现Cookie的信息时，会对比服务器上的记录，最后得到之前的状态信息。</p>\n<h4 id=\"http报文\">http报文<a href=\"2019/12/28/图解HTTP#http报文\"></a></h4><p>报文的结构一般由报文首部和空行（CR+LF）还有报文主体组成。</p>\n<h4 id=\"http状态码\">http状态码<a href=\"2019/12/28/图解HTTP#http状态码\"></a></h4><p>1xx Informational（信息状态码）,表示接受的请求正在处理。</p>\n<p>2xx Success（成功状态码），请求正常处理完毕。</p>\n<blockquote>\n<p>200 ok 正常处理</p>\n<p>204 No Content  表示服务器已正常处理接收到的请求，但返回的响应报文不包含实体。即客户端发送请求后，返回的消息不会更新页面。</p>\n<p>206 Partial Content  表示客户端进行范围请求，而服务器成功之星这部分GET请求。</p>\n</blockquote>\n<p>3xx Redirection（重定向状态码)</p>\n<blockquote>\n<p>301 Moved Permanently 永久性重定向，表示请求的资源已被分配新的URI。</p>\n<p>302 Found 临时重定向 ，表示请求的资源已被分配新的URI，希望用户本次能使用新的URI访问。</p>\n<p>303 See OTher 表示由于请求对应的资源存在另一个URI应使用GET方法定向获取请求的资源。</p>\n<p>304 Not Modified 该状态码表客户端发送附带条件的请求时，服务器端允许请求访问资源，但因发生请求未满足条件的情况后，直接返回304 。该状态码跟重定向没关系。</p>\n<p>307 Temporary Redirect 临时重定向，跟302相同，但是禁止POST变换成。</p>\n</blockquote>\n<p>4xx 客户端错误</p>\n<blockquote>\n<p>400 Bad Request  该状态码表示报文中存在错误语法。当错误发生时，需修改请求内容后再次发送。</p>\n<p>401 Unauthorized   该状态码表示发送的请求需要有通过http认证的认证信息，之前已进行过1次请求，则表示用户认证失败。</p>\n<p>403 Forbidden  该状态码表示对请求的资源访问被服务器拒绝了。</p>\n<p>404 Not Found  服务器没有请求的资源。</p>\n</blockquote>\n<p>5xx  服务器错误</p>\n<blockquote>\n<p>500 Internal Server Error    该状态码表示服务器端在执行请求时发生了错误。</p>\n<p>503 Service Unavailable        该状态码表明服务器暂时处于超负荷或者正在进行停机维护。</p>\n</blockquote>\n<p>有时服务器也会返回跟情况不一致的状态码。</p>\n<h4 id=\"http首部字段\">http首部字段<a href=\"2019/12/28/图解HTTP#http首部字段\"></a></h4><p> 通用首部字段</p>\n<blockquote>\n<p>Cache-Control 控制缓存行为。</p>\n<blockquote>\n<p>Cache-control指令</p>\n<blockquote>\n<p>no-cache  强制向服务器再次验证。</p>\n<p>no-store  不缓存请求或响应的任何内容。</p>\n<p>max-age=[秒] 响应最大Age值。</p>\n<p>max-stale(=[秒]) 接受已过期的响应。</p>\n<p>min-fresh=[秒] 期望在指定时间内的响应仍有效。</p>\n<p>no-transform 代理不可更改媒体类型。</p>\n<p>only-if-cached 从缓存获取资源。</p>\n<p>cache-extension 新指令标记(token)</p>\n</blockquote>\n<p>缓存响应指令 </p>\n<blockquote>\n<p>public  可向任意方提供响应的缓存。</p>\n<p>private 仅向特定用户返回响应。</p>\n<p>no-cache 缓存前必须先确认其有效性。</p>\n<p>no-store 不缓存请求或响应的任何内容。</p>\n<p>no-transform 代理不可更改媒体类型。</p>\n<p>must-revalidate 可缓存但必须在向资源服务器进行确认。</p>\n<p>proxy-revalidate 要求中间缓存服务器对缓存的响应有效性再进行确认。</p>\n<p>max-age=[秒] 响应最大 Age值。</p>\n<p>s-maxage=[秒] 公共缓存服务器响应的最大Age值。</p>\n<p>cache-extension  新指令标记(token)</p>\n</blockquote>\n</blockquote>\n<p>Connection  逐跳首部、连接的管理。</p>\n<p>Date 创建报文日期的指令。</p>\n<p>Pragma 报文指令。</p>\n<p>trailer 报文末端的首部一览。</p>\n<p>Transfer-Encoding 指定报文主体的传输编码方式。</p>\n<p>Upgrade 升级为其他协议。</p>\n<p>Via 代理服务器的相关信息。</p>\n<p>Warning 错误通知。</p>\n<blockquote>\n<p>警告码</p>\n<p>110 Response is stale (响应已过期) 代理返回已过期的资源.</p>\n<p>111 Revalidation failed (再验证失败)  代理在验证资源有效性时失败.</p>\n<p>112 Disconnection operation (断开连接操作) 代理互联网连接故意被切断。</p>\n<p>113 Heuristic expiration(试探性过期) 响应的使用期超过24小时.</p>\n<p>199 Miscellaneous warning (杂向警告) 任意警告内容。</p>\n<p>214 Transformation applied (使用了转换) 代理对内容编码或媒体类型等执行了某些处理时。</p>\n<p>299 Miscellanous persistent warning (持久杂项警告) 任意警告内容。</p>\n</blockquote>\n</blockquote>\n<p>请求首部字段。</p>\n<blockquote>\n<p>Accept 用户代理可处理的媒体类型。</p>\n<p>Accept-Charset 优先的字符集。</p>\n<p>Accept-Encoding 优先的编码内容。</p>\n<p>Accept-Language 优先的语言。</p>\n<p>Authorization  web认证信息。</p>\n<p>Expect 期待服务器的特定行为。</p>\n<p>From 用户的电子邮件地址。</p>\n<p>Host 请求资源所在的服务器。</p>\n<p>If-Match 比较实体标记（ETag)。</p>\n<p>If-Modified-Since 比较资源的更新时间。</p>\n<p>If-None-Match    比较实体标记（与If-Match相反）。</p>\n<p>If-Range 资源未更新时发送实体Byte的范围请求。</p>\n<p>If-Unmodified-Since 比较资源的更新时间(与If-Modified-Since )。</p>\n<p>Max-Forwards 最大传输逐跳数。</p>\n<p>Proxy-Authorization 代理服务器要求客户端的认证信息。</p>\n<p>Range 实体字节范围请求。</p>\n<p>Referer 对请求中URI的原始获取方。</p>\n<p>TE 传输编码的优先级。</p>\n<p>User-Agent HTTP客户端程序的信息。</p>\n</blockquote>\n<p>响应首部字段</p>\n<blockquote>\n<p>Accept-Ranges 是否接受字节范围请求。</p>\n<p>Age 推算资源创建经过时间。</p>\n<p>ETag 资源的匹配信息。</p>\n<p>Location 令客户端重定向至指定URI。</p>\n<p>Proxy-Authenticate 代理服务器对客户端的认证信息。</p>\n<p>Retry-After 对再次发起请求的时机要求。</p>\n<p>Server HTTP服务器的安装信息。</p>\n<p>Vary 代理服务器缓存的管理信息。</p>\n<p>WWW-Authenticate 服务器对客户端的认证信息。</p>\n</blockquote>\n<p>实体首部字段</p>\n<blockquote>\n<p>Allow 资源可支持的HTTP方法。</p>\n<p>Content-Encoding 实体主体适用的编码方式。</p>\n<p>Content-Language 实体主体的自然语言。</p>\n<p>Content-Length 实体主体的大小。</p>\n<p>Content-Location 替代对应资源的URI。</p>\n<p>Content-MD5 实体主体的报文摘要。</p>\n<p>Content-Range 实体主体的位置范围。</p>\n<p>Content-Type 实体主体的的媒体类型。</p>\n<p>Expires   实体主体过期的时间日期。</p>\n<p>Last-Modified 资源的最后修改时间日期。</p>\n</blockquote>\n<p><strong>HTTP + 加密 +认证 +完整性保护=HTTPS</strong></p>\n<p><strong>采用全双工通信的WebSocket</strong></p>\n<p><strong>web攻击技术</strong></p>\n<p>本书内容不深，可当做程序员的HTTP科普书。</p>\n","prev":{"title":"从SVN拉Vue项目出现缺少依赖无法正常运行","link":"2020/01/04/从SVN拉Vue项目出现缺少依赖无法正常运行"},"next":{"title":"网络是如何连接的","link":"2019/12/17/网络是如何连接的"},"plink":"http://yoursite.com/2019/12/28/图解HTTP/","toc":[{"title":"图解HTTP","id":"图解HTTP","index":"1"}]}